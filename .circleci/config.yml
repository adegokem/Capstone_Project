version: 2.1

orbs:
  kubernetes: circleci/kubernetes@1.3.0
  aws-eks: circleci/aws-eks@2.2.0


jobs:
    check-code:
      docker:
        - image: python:3.7.3-stretch
      working_directory: ~/repo
      steps:
        - checkout
        - run:
            name: install Linter
            command: |
              make install
              wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 &&\
              chmod +x /bin/hadolint
        - run:
            name: run lint to check Dockerfile
            command: |         
              make lint

    create-docker:
      docker:
        - image:  circleci/golang:1.16
      working_directory: ~/repo
      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
        - run:
            name: build image
            command: |
              sudo chmod +x run_docker.sh
              ./run_docker.sh ${DOCKER_USER} ${CIRCLE_WORKFLOW_ID:0:5}
        - run:
            name: build/upload to dockerhub
            command: |
              sudo chmod +x ./upload_docker.sh 
              ./upload_docker.sh ${DOCKER_USER} ${CIRCLE_WORKFLOW_ID:0:5}

    create-eks-cluster:
      docker:
        - image: python:3.7-alpine3.11
      working_directory: ~/repo
      steps:
        - checkout
        - run:
            name: install eks
            command: |
              apk add --update tar gzip  curl
              curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.100.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
              mv /tmp/eksctl /usr/local/bin
        - run:
            name: Create EKS Cluster
            command: |
              eksctl create cluster --name=EKSCluster-${CIRCLE_WORKFLOW_ID:0:5} 
    
    deploy-eks-cluster:
      docker:
        - image: circleci/python:2.7.14
          user: root
      working_directory: ~/repo
      steps:
        - checkout
        - setup_remote_docker:
            docker_layer_caching: true
        - run:
            name: install kubectl tools and deploy the cluster
            command: |
              sudo apt -y install tar gzip unzip curl
              sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              sudo unzip awscliv2.zip
              sudo ./aws/install
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              install -m 0755 kubectl /bin/kubectl
              kubectl version --client
        - run:
            name: Deploy Cluster
            command: |
              PROJECT=capstone
              IMAGE="adegokem/capstone"
              aws eks --region us-west-2 update-kubeconfig --name EKSCluster-${CIRCLE_WORKFLOW_ID:0:5}
              aws sts get-caller-identity
              docker pull $IMAGE
              kubectl create deployment capstone --image=$IMAGE
              kubectl create namespace capstone
              kubectl apply -f deployment.yml
              kubectl set image deployments/$PROJECT $PROJECT=$IMAGE:${CIRCLE_WORKFLOW_ID:0:5}
              kubectl get nodes
              kubectl get pods
              kubectl config view
              kubectl get all -n capstone
              kubectl -n capstone describe service capstone
              

workflows:
  default:
    jobs:
      - check-code
      - create-docker:
          requires: [check-code]
      - create-eks-cluster:
          requires: [create-docker]
      - deploy-eks-cluster:
          requires: [create-eks-cluster]
       